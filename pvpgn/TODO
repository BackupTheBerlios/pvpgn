PvPGN TODO LIST AND WHATS BEING WORKED ON:
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Release v1.7 ROADMAP:
1. admin protocol (design an admin protocol and implement the server side and 
a client lib)
2. w3route server and serverside game packets
3. extend/redesign storage to be used by both bnetd and d2cs/d2dbs
4. DOCUMENTATION (client and server documentation; a FAQ, HOWTO and a file 
describing all configuration options)
5. reorganize and clean prefs.c system (now its replicated between bnetd and 
d2cs/d2dbs not to mention beeing very inflexible)

Stuff not programmed for any specific version release:			      

* complete tournament support with crash recovery option

* anonagame stuff
    c. move w3route functions to its own .c/.h file (for w3route server)
    e. tournament stuff
	1. determine how games are limited to 30 minutes & map reveled at 25
	2. complete the process for finals selection
	3. make struct to hold / match / advance / eleminate finals players
	    and functions to acomplish this task
	4. add stats recording for tournament games (did race wins)

* add a /clearstats <clienttag> command to be able to clear game stats for
WAR3/W3XP/SC/BW/W2BNE.... (dunno if users should be able to delete their own stats...
but admins should be able to delete the stats of cheaters)

* moving from current team stuff to teamID (thats something DJP and his guys 
wanted to do) 

* changing data references from accountnames to UIDs .... 

* according to forum post, sometimes the teamcount gets reduced too much 
(set to -1) only i W3XP, when the team is disbanded before the first play 

* make a "gametrans" like file for realms.list too so internal clients
can get a internal IP for the d2cs server

* get BITS working (even considering on starting from JEBs version
which he claims to fully work BITS and add war3 to it)

* make a separate daemon w3route server

* design a plugins support and move in time all the code in plugins (except
the core code of course)

* add gamespy protocol support (gamespy master server does what we do in bnetd
keeping user accounts, records, stats, channels, publishing games to requestors)
very nice ideea from Mivabe

* add some way to be able to read/write specific "runtime changable" bnetd.conf
entries (like while server is online doing /config "allow_unknown_version" "false")

* optimize PvPGN using "inline" functions in all "small" functions

* add a bnetd.conf "sync_on_logoff" parameter which should tell PvPGN to force 
or not a account_save() when the user logoffs (increases storage I/O but also 
eliminates most of the account data beeing outdated because of server crash)
